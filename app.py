import streamlit as st
import google.generativeai as genai

# ุฅุนุฏุงุฏ Google Gemini
genai.configure(api_key="AIzaSyDiDuO9UDhPsA3UDQ7ZXoDfcovKE_Nmyog")
text_model = genai.GenerativeModel("gemini-pro")

# ูุงุฌูุฉ ุงูุชุทุจูู
st.set_page_config(page_title="๐ StoryCraft - Simple Scene Builder", layout="centered")
st.title("๐ StoryCraft - Simple Scene Builder")

# ุฅุฏุฎุงู ุงููุตุฉ ูุนุฏุฏ ุงููุดุงูุฏ
st.markdown("### โ๏ธ ุงูุชุจ ููุฎุต ุงููุตุฉ ููุง (ุฏุฑุงูุช ุจุณูุท):")
story_draft = st.text_area("ูุซุงู: ูุทุฉ ูููุฏูุง ุงุตุทุงุฏูุง ูุฑุด", height=200)

num_scenes = st.number_input("๐ธ ุนุฏุฏ ุงููุดุงูุฏ ุงููุทููุจุฉ:", min_value=1, max_value=20, value=7)

if st.button("๐ก ุญูู ุงููุตุฉ ูุงุทูุน ุงููุดุงูุฏ"):
    if not story_draft.strip():
        st.warning("ุฑุฌุงุกู ุงูุชุจ ููุฎุต ุงููุตุฉ.")
    else:
        with st.spinner("โณ ุจูุญูู ุงููุตุฉ..."):
            prompt = f"""
ูุณู ุงููุตุฉ ุงูุชุงููุฉ ุฅูู {num_scenes} ูุดูุฏ ุชุตููุฑู ูููุฒ. 
ูู ูุดูุฏ ูุฌุจ ุฃู ูุญุชูู ุนูู:
1. ุนููุงู ุจุณูุท ูููุดูุฏ
2. ูุตู ุจุตุฑู ุฏููู ุฌุฏูุง ูุฃูู ุจุชุญุถูุฑ ูุตูุฑุฉ
3. ุงุฐูุฑ ุฅุฐุง ูุงูุช ุงููุทุฉ ุฃู ุงุจููุง ุธุงูุฑููุ ููุงุฐุง ููุนููู

ุงููุตุฉ:
{story_draft}
"""
            try:
                response = text_model.generate_content(prompt)
                scenes = response.text.strip().split("\n\n")

                st.success("โ ุชู ุงุณุชุฎุฑุงุฌ ุงููุดุงูุฏ:")
                for idx, scene in enumerate(scenes):
                    st.markdown(f"#### ๐ฌ ูุดูุฏ {idx+1}")
                    st.markdown(scene)

            except Exception as e:
                st.error(f"โ ุญุตู ุฎุทุฃ ุฃุซูุงุก ุงูุชุญููู: {e}")
